/*
Highly divisible triangular number
Problem 12

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
*/

#include <stdio.h>
#include <math.h>

long getDivisors(long num){
	long divisor = 2;
	long num_divisor = 1;

	while (divisor < pow(num,.5)){
		if (num % divisor == 0){
			num_divisor++;
		}
		divisor++;
	}
	return num_divisor * 2;

}

int main(){
	long num_divisors = 500;
	long start = 5;//pow(2,num_divisors/2);

	long triangular;
	long divisors = 0;
	while (divisors < num_divisors){
		triangular = (start * (start + 1)/2);
		divisors = getDivisors(triangular);
		printf("%ld has %ld divisors\n",triangular, divisors);
		start++;
	}

	printf("smallest number to have %ld divisors is: %ld\n", num_divisors, triangular);
	return 0;
}